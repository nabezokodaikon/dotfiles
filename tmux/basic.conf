#--------------------------------
# Basic settings
#--------------------------------
# プレフィックス変更
unbind C-b
set-option -g prefix C-t
bind-key C-t send-prefix

# vi 風キー操作設定
set-window-option -g mode-keys vi

# ウィンドウの自動リネームを無効
set-window-option -g automatic-rename off

# 設定ファイル再読み込み
bind r source-file ~/.tmux.conf\; display-message "Reload Config!"

# エスケープシーケンスの待ち時間を無しにする。
set-option -g escape-time 0

# Take over the environment variable TERM
set-option -g default-terminal "$TERM"

# 24-bit color
tmux_conf_theme_24b_colour=true
if '[[ "${TERM}" == "xterm-termite" ]]' "set-option -ga terminal-overrides \",xterm-termite:Tc\""
if '[[ "${TERM}" == "xterm-256color" && "${OSTYPE:0:6}" == "darwin" ]]' "set-option -g default-terminal \"screen-256color\"; set -g terminal-overrides \",xterm-256color:Tc\""

# ステータスライン
# --------------------------------
# 位置
set-option -g status-position top

# 更新間隔(秒)
set-option -g status-interval 1

set-option -g status-right "#H %m/%d %H:%M"


# ログ
# --------------------------------
# ログ出力
unbind Q
bind Q pipe-pane -o 'cat >> $HOME/.config/tmux/logs/`date "+%Y-%m-%d"`:#S-#I:#W-#P.log'


# ウィンドウ操作
# --------------------------------
# ウィンドウ一覧表示
unbind w
unbind space
bind space choose-window

# 次のウィンドウへ移動
unbind n
bind n next-window

# 前のウィンドウへ連続移動
unbind p
bind p previous-window

# 直前のウィンドウへ移動
unbind C-t
bind C-t last-window


# ペイン操作
# --------------------------------
# ペイン分割
unbind '"'
unbind %
bind H split-window -v
bind V split-window -h

# vim ライクのペイン移動
unbind l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vim ライクのウィンドウサイズ調整
bind -r C-h resize-pane -L 2
bind -r C-j resize-pane -D 2
bind -r C-k resize-pane -U 2
bind -r C-l resize-pane -R 2

# 直前のペインへ移動
unbind o
unbind w
bind w last-pane
unbind C-w
bind -r C-w last-pane


# 複数ペイン同時操作
# --------------------------------
# 複数ペイン同時操作をトグル
unbind e
bind e refresh-client \; set-window-option synchronize-panes


# クリップボード
# --------------------------------
# linux
if "which xclip" "bind -t vi-copy Enter copy-pipe 'xclip -i -selection clipboard'"
if "which xclip" "bind ] run 'tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer'"
if "which xclip" "set-option -g default-command 'new-tab > /dev/null 2>&1;$SHELL'"

# mac
if "which reattach-to-user-namespace" "bind -t vi-copy Enter copy-pipe 'reattach-to-user-namespace pbcopy'"
if "which reattach-to-user-namespace" "bind ] run 'tmux set-buffer -- \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer'"
if "which reattach-to-user-namespace" "set-option -g default-command 'new-tab > /dev/null 2>&1;reattach-to-user-namespace -l $SHELL'"
