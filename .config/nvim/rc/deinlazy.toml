# denite.nvim
[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
depends = [
    'neomru.vim',
    'neoyank.vim'
    ]
hook_source = 'source ~/.config/nvim/rc/plugins/denite.rc.vim'

# denite.nvimでファイル表示履歴を表示する。
[[plugins]]
repo = 'Shougo/neomru.vim'
hook_source = '''
    let g:neomru#file_mru_limit = 64
    let g:neomru#time_format = "%y/%m/%d %H:%M"
'''

# denite.vimでyankの履歴を表示する。
[[plugins]]
repo = 'Shougo/neoyank.vim'

# File browser
[[plugins]]
repo = 'Shougo/defx.nvim'
on_cmd = 'Defx'
hook_source = 'source ~/.config/nvim/rc/plugins/defx.rc.vim'

# Completion
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = [
    'deoplete-dictionary',
    'deoplete-tag'
    ]
hook_source = 'source ~/.config/nvim/rc/plugins/deoplete.rc.vim'

[[plugins]]
repo = 'deoplete-plugins/deoplete-dictionary'

[[plugins]]
repo = 'deoplete-plugins/deoplete-tag'

# Completion for Scala
# $ sbt ensimeConfig
# $ sbt ensimeConfigProject
[[plugins]]
repo = 'ensime/ensime-vim'

# Asynchronous linting/fixing for Vim and Language Server Protocol (LSP) integration
[[plugins]]
repo = 'w0rp/ale'
on_ft = 'scala'
hook_source = '''
    let g:ale_completion_enabled = 1
'''
depends = [
    'ensime-vim'
]

# Completion for other language
# Rust: https://github.com/rust-lang/rls
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
on_ft = 'rust'
hook_source = '''
    set hidden
    set completeopt=menu
    set signcolumn=yes

    let g:LanguageClient_useVirtualText = 0

    let g:LanguageClient_serverCommands = {
        \ 'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],
        \ }

    function! s:restartLanguageClient()
        LanguageClientStop
        sleep 300m
        LanguageClientStart
    endfunction

    augroup languageClient-neovim
        autocmd!
        autocmd BufWritePre *.rs call s:restartLanguageClient()
    augroup END

    command! LanguageClientReStart call s:restartLanguageClient()

    LanguageClientReStart
'''

# emmet-vim
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'javascript', 'javascript.jsx', 'typescript', 'typescript.tsx']
hook_source = '''
    let g:user_emmet_install_global = 0
    augroup emmet-vim
        autocmd!
        autocmd FileType html,css,javascript,javascript.jsx,typescript,typescript.tsx EmmetInstall
    augroup END
'''

# Scala のシンタックスハイライト
[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = 'scala'

# JSX Syntax
[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = 'javascript'

# Syntax Highlighting and Indentation for Haskell and Cabal
[[plugins]]
repo = 'neovimhaskell/haskell-vim'
on_ft = 'haskell'
hook_source = '''
    let g:haskell_indent_guard = 4
'''

# toml syntax
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# TypeScript syntax
[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

# Provides more syntax highlighting and DOM keywords for TypeScript
[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'
on_ft = 'typescript'

# Typescript tooling for Neovim
[[plugins]]
repo = 'mhartington/nvim-typescript'
build = './install.sh'
on_ft = 'typescript'

# Vim configuration for Rust.
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
    let g:rustfmt_command = 'rustfmt'
    let g:rustfmt_autosave = 1 
'''

[[plugins]]
repo = 'jdonaldson/vaxe'
on_ft = 'haxe'
hook_source = '''
    let g:vaxe_haxe_version = 3
'''

# Translate Japanese/English
[[plugins]]
repo = 'nabezokodaikon/jaen-translate.vim'
on_cmd = 'JaEnTranslate'
